ko.computedContext=ko.dependencyDetection=function(){function r(){return++n}function i(n){e.push(t),t=n}function s(){t=e.pop()}var e=[],t,n=0;return{begin:i,end:s,registerDependency:function(e){if(t){if(!ko.isSubscribable(e))throw new Error("Only subscribable things can act as dependencies");t.callback(e,e._id||(e._id=r()))}},ignore:function(e,t,n){try{return i(),e.apply(t,n||[])}finally{s()}},getDependenciesCount:function(){if(t)return t.computed.getDependenciesCount()},isInitial:function(){if(t)return t.isInitial}}}(),ko.exportSymbol("computedContext",ko.computedContext),ko.exportSymbol("computedContext.getDependenciesCount",ko.computedContext.getDependenciesCount),ko.exportSymbol("computedContext.isInitial",ko.computedContext.isInitial),ko.exportSymbol("computedContext.isSleeping",ko.computedContext.isSleeping),ko.exportSymbol("ignoreDependencies",ko.ignoreDependencies=ko.dependencyDetection.ignore);