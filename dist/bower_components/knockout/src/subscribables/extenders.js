function valuesArePrimitiveAndEqual(e,t){var n=e===null||typeof e in primitiveTypes;return n?e===t:!1}function throttle(e,t){var n;return function(){n||(n=setTimeout(function(){n=undefined,e()},t))}}function debounce(e,t){var n;return function(){clearTimeout(n),n=setTimeout(e,t)}}function applyExtenders(e){var t=this;return e&&ko.utils.objectForEach(e,function(e,n){var r=ko.extenders[e];typeof r=="function"&&(t=r(t,n)||t)}),t}ko.extenders={throttle:function(e,t){e.throttleEvaluation=t;var n=null;return ko.dependentObservable({read:e,write:function(r){clearTimeout(n),n=setTimeout(function(){e(r)},t)}})},rateLimit:function(e,t){var n,r,i;typeof t=="number"?n=t:(n=t.timeout,r=t.method),i=r=="notifyWhenChangesStop"?debounce:throttle,e.limit(function(e){return i(e,n)})},notify:function(e,t){e.equalityComparer=t=="always"?null:valuesArePrimitiveAndEqual}};var primitiveTypes={"undefined":1,"boolean":1,number:1,string:1};ko.exportSymbol("extenders",ko.extenders);